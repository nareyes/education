USE WAREHOUSE COMPUTE_WH;


-- INSPECT RAW DATA FROM PRIOR WORKSHEET
SELECT * FROM DEMO_DB.PUBLIC.JSON_RAW_HR;


-- QUERYING RAW DATA
SELECT RAW_FILE: city
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;

SELECT RAW_FILE: first_name
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;


-- QUERYING RAW DATA AND FORMATTING
SELECT RAW_FILE: first_name:: STRING AS FIRST_NAME
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;

SELECT RAW_FILE: id:: INT AS ID
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;


-- QUERYING MULTIPLE COLUMN RAW DATA
SELECT
    RAW_FILE: id:: INT AS ID,
    RAW_FILE: first_name:: STRING AS FIRST_NAME,
    RAW_FILE: last_name:: STRING AS LAST_NAME,
    RAW_FILE: gender:: STRING AS GENDER    
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;


-- QUERYING NESTED RAW DATA
SELECT RAW_FILE: job AS JOB
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;

SELECT
    RAW_FILE: first_name:: STRING AS FIRST_NAME,
    RAW_FILE: last_name:: STRING AS LAST_NAME,
    RAW_FILE: job.title:: STRING AS JOB_TITLE,
    RAW_FILE: job.salary:: INT AS SALARY
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;


-- QUERYING ARRAY RAW DATA (COMBINED WITH NESTED DATA)
SELECT RAW_FILE: prev_company AS PREV_COMPANT
FROM DEMO_DB.PUBLIC.JSON_RAW_HR;

SELECT
    RAW_FILE: id:: INT AS ID,
    RAW_FILE: first_name:: STRING AS FIRST_NAME,
    RAW_FILE: last_name:: STRING AS LAST_NAME,
    RAW_FILE: prev_company[0]:: STRING AS PREV_COMPANY_1,
    RAW_FILE: prev_company[1]:: STRING AS PREV_COMPANY_2
FROM DEMO_DB.PUBLIC.JSON_RAW_HR
WHERE RAW_FILE: prev_company[0] IS NOT NULL
ORDER BY ID ASC;


-- QUERYING ARRAY WITH NESTED DATA
SELECT
    RAW_FILE: id:: INT AS ID,
    RAW_FILE: first_name:: STRING AS FIRST_NAME,
    RAW_FILE: last_name:: STRING AS LAST_NAME,
    RAW_FILE: spoken_languages[0].language:: STRING AS LANGUAGE_1,
    RAW_FILE: spoken_languages[0].level:: STRING AS LANGUAGE_1_LEVEL,
    RAW_FILE: spoken_languages[1].language:: STRING AS LANGUAGE_2,
    RAW_FILE: spoken_languages[1].level:: STRING AS LANGUAGE_2_LEVEL,
    RAW_FILE: spoken_languages[2].language:: STRING AS LANGUAGE_3,
    RAW_FILE: spoken_languages[2].level:: STRING AS LANGUAGE_3_LEVEL
FROM DEMO_DB.PUBLIC.JSON_RAW_HR
WHERE RAW_FILE: prev_company[0] IS NOT NULL
ORDER BY ID ASC;


-- CREATE TABLE AND INSERT PARSED DATA
CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.HR_EMPLOYEE_LANGUAGES (
    ID                  INT,
    FIRST_NAME          VARCHAR(30),
    LAST_NAME           VARCHAR(30),
    LANGUAGE_1          VARCHAR(30),
    LANGUAGE_1_LEVEL    VARCHAR(30),
    LANGUAGE_2          VARCHAR(30),
    LANGUAGE_2_LEVEL    VARCHAR(30),
    LANGUAGE_3          VARCHAR(30),
    LANGUAGE_3_LEVEL    VARCHAR(30)
);

INSERT INTO DEMO_DB.PUBLIC.HR_EMPLOYEE_LANGUAGES (
    SELECT
        RAW_FILE: id:: INT AS ID,
        RAW_FILE: first_name:: STRING AS FIRST_NAME,
        RAW_FILE: last_name:: STRING AS LAST_NAME,
        RAW_FILE: spoken_languages[0].language:: STRING AS LANGUAGE_1,
        RAW_FILE: spoken_languages[0].level:: STRING AS LANGUAGE_1_LEVEL,
        RAW_FILE: spoken_languages[1].language:: STRING AS LANGUAGE_2,
        RAW_FILE: spoken_languages[1].level:: STRING AS LANGUAGE_2_LEVEL,
        RAW_FILE: spoken_languages[2].language:: STRING AS LANGUAGE_3,
        RAW_FILE: spoken_languages[2].level:: STRING AS LANGUAGE_3_LEVEL
    FROM DEMO_DB.PUBLIC.JSON_RAW_HR
    WHERE RAW_FILE: prev_company[0] IS NOT NULL
);


-- INSPECT DATA
SELECT * FROM DEMO_DB.PUBLIC.HR_EMPLOYEE_LANGUAGES;