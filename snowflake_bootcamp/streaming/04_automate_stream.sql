USE WAREHOUSE COMPUTE_WH;


-- CREATE TASK
CREATE OR REPLACE TASK ALL_DATA_CHANGES
    WAREHOUSE = COMPUTE_WH
    SCHEDULE = '1 MINUTE'
    WHEN SYSTEM$STREAM_HAS_DATA('SALES_STREAM')
    AS 
MERGE INTO STREAM_DB.PUBLIC.SALES_FINAL AS F      
USING ( SELECT STRE.*,ST.LOCATION,ST.EMPLOYEES
        FROM SALES_STREAM AS STRE
            JOIN STREAM_DB.PUBLIC.STORES AS ST
                ON STRE.STORE_ID = ST.STORE_ID
       ) S
ON F.ID=S.ID
WHEN MATCHED                 
    AND S.METADATA$ACTION ='DELETE' 
    AND S.METADATA$ISUPDATE = 'FALSE'
    THEN DELETE                   
WHEN MATCHED       
    AND S.METADATA$ACTION ='INSERT' 
    AND S.METADATA$ISUPDATE = 'TRUE'       
    THEN UPDATE
    SET F.PRODUCT = S.PRODUCT,
        F.PRICE = S.PRICE,
        F.AMOUNT = S.AMOUNT,
        F.STORE_ID = S.STORE_ID
WHEN NOT MATCHED 
    AND S.METADATA$ACTION ='INSERT'
    THEN INSERT 
        (ID, PRODUCT, PRICE, STORE_ID, AMOUNT, EMPLOYEES, LOCATION)
    VALUES
        (S.ID, S.PRODUCT, S.PRICE, S.STORE_ID, S.AMOUNT, S.EMPLOYEES, S.LOCATION);

ALTER TASK ALL_DATA_CHANGES RESUME;
SHOW TASKS;


-- CHANGE DATA
INSERT INTO STREAM_DB.PUBLIC.SALES_RAW_STAGING VALUES (11,'Milk',1.99,1,2);
INSERT INTO STREAM_DB.PUBLIC.SALES_RAW_STAGING VALUES (12,'Chocolate',4.49,1,2);
INSERT INTO STREAM_DB.PUBLIC.SALES_RAW_STAGING VALUES (13,'Cheese',3.89,1,1);

UPDATE STREAM_DB.PUBLIC.SALES_RAW_STAGING
    SET PRODUCT = 'Chocolate Bar' WHERE PRODUCT ='Chocolate';

DELETE FROM STREAM_DB.PUBLIC.SALES_RAW_STAGING
    WHERE PRODUCT = 'Mango'; 


-- VERIFY RESULTS
SELECT * FROM STREAM_DB.PUBLIC.SALES_FINAL;
SELECT * FROM STREAM_DB.PUBLIC.SALES_RAW_STAGING;     
SELECT * FROM SALES_STREAM;


-- VERIFY HISTORY
SELECT *
FROM TABLE (INFORMATION_SCHEMA.TASK_HISTORY())
ORDER BY NAME ASC, SCHEDULED_TIME DESC;