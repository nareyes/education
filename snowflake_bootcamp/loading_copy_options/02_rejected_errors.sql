USE WAREHOUSE COMPUTE_WH;


-- CREATE TABLE
CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.ORDERS_VALIDATE (
    ORDER_ID    VARCHAR(30),
    AMOUNT      VARCHAR(30),
    PROFIT      INT,
    QUANTITY    INT,
    CATEGORY    VARCHAR(30),
    SUBCATEGORY VARCHAR(30)
);

SELECT * FROM DEMO_DB.PUBLIC.ORDERS_VALIDATE;


-- CREATE STAGE
CREATE OR REPLACE STAGE MANAGE_DB.PUBLIC.AWS_STAGE_ORDERS
    URL = 's3://snowflakebucket-copyoption/returnfailed/';

LIST @MANAGE_DB.PUBLIC.AWS_STAGE_ORDERS;


-- LOAD DATA AND RETURN ERRORS (PREVENTS LOAD)
COPY INTO DEMO_DB.PUBLIC.ORDERS_VALIDATE
    FROM @MANAGE_DB.PUBLIC.AWS_STAGE_ORDERS
    FILE_FORMAT = MANAGE_DB.PUBLIC.CSV_FORMAT
    PATTERN = '.*Order.*'
    VALIDATION_MODE = RETURN_ERRORS;


-- STORING REJECTED RECORDS IN A TABLE
CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.REJECTED_RECORDS AS
    SELECT REJECTED_RECORD
    FROM TABLE (RESULT_SCAN (LAST_QUERY_ID()));

SELECT * FROM DEMO_DB.PUBLIC.REJECTED_RECORDS;


-- LOAD DATA WITH CONTINUE (LOADS VALID RECORDS)
COPY INTO DEMO_DB.PUBLIC.ORDERS_VALIDATE
    FROM @MANAGE_DB.PUBLIC.AWS_STAGE_ORDERS
    FILE_FORMAT = MANAGE_DB.PUBLIC.CSV_FORMAT
    PATTERN = '.*Order.*'
    ON_ERROR = CONTINUE;


-- STORE REJECTED RECORDS FROM PARTIAL LOAD ^
CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.REJECTED_RECORDS AS
    SELECT *
    FROM TABLE (VALIDATE (DEMO_DB.PUBLIC.ORDERS_VALIDATE, JOB_ID => '_LAST'));

SELECT * FROM DEMO_DB.PUBLIC.REJECTED_RECORDS;


-- PARSE REJECTED RECORD CONTENT AND LOAD INTO A SEPERATE TABLE
CREATE OR REPLACE TABLE DEMO_DB.PUBLIC.REJECTED_RECORDS_PARSED AS
    SELECT
        SPLIT_PART (REJECTED_RECORD, ',', 1) as ORDER_ID, 
        SPLIT_PART (REJECTED_RECORD, ',', 2) as AMOUNT, 
        SPLIT_PART (REJECTED_RECORD, ',', 3) as PROFIT, 
        SPLIT_PART (REJECTED_RECORD, ',', 4) as QUATNTITY, 
        SPLIT_PART (REJECTED_RECORD, ',', 5) as CATEGORY, 
        SPLIT_PART (REJECTED_RECORD, ',', 6) as SUBCATEGORY
    FROM DEMO_DB.PUBLIC.REJECTED_RECORDS;


-- INSPECT DATA
SELECT * FROM DEMO_DB.PUBLIC.REJECTED_RECORDS_PARSED;