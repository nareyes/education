USE WAREHOUSE COMPUTE_WH;


-- LIST POLICIES
DESC MASKING POLICY DEMO_DB.PUBLIC.PHONE;
SHOW MASKING POLICIES;


-- QUERY COLUMNS WITH APPLIED POLICIES
SELECT *
FROM TABLE (DEMO_DB.INFORMATION_SCHEMA.POLICY_REFERENCES (POLICY_NAME => 'PHONE'));


-- REMOVE POLICY
ALTER TABLE IF EXISTS DEMO_DB.PUBLIC.CUSTOMERS_MASK
    MODIFY COLUMN PHONE
    UNSET MASKING POLICY;


-- CREATE NEW POLICY
CREATE OR REPLACE MASKING POLICY DEMO_DB.PUBLIC.FULL_NAME
    AS (VAL VARCHAR) RETURNS VARCHAR ->
        CASE
            WHEN CURRENT_ROLE() IN ('ANALYST_FULL', 'ACCOUNTADMIN') THEN VAL
            ELSE CONCAT (LEFT (VAL, 2), '**********')
        END;

CREATE OR REPLACE MASKING POLICY DEMO_DB.PUBLIC.EMAIL
    AS (VAL VARCHAR) RETURNS VARCHAR ->
        CASE
            WHEN CURRENT_ROLE() IN ('ANALYST_FULL', 'ACCOUNTADMIN') THEN VAL
            WHEN CURRENT_ROLE() IN ('ANALYST_MASKED') THEN REGEXP_REPLACE (VAL,'.+\@','*****@')
            ELSE '**********'
        END;


-- APPLY POLICIES
ALTER TABLE IF EXISTS DEMO_DB.PUBLIC.CUSTOMERS_MASK
    MODIFY COLUMN PHONE
    SET MASKING POLICY DEMO_DB.PUBLIC.PHONE;

ALTER TABLE IF EXISTS DEMO_DB.PUBLIC.CUSTOMERS_MASK
    MODIFY COLUMN FULL_NAME
    SET MASKING POLICY DEMO_DB.PUBLIC.FULL_NAME;

ALTER TABLE IF EXISTS DEMO_DB.PUBLIC.CUSTOMERS_MASK
    MODIFY COLUMN EMAIL
    SET MASKING POLICY DEMO_DB.PUBLIC.EMAIL;


-- VALIDATE POLICIES
USE ROLE ANALYST_FULL;
SELECT * FROM DEMO_DB.PUBLIC.CUSTOMERS_MASK;

USE ROLE ANALYST_MASKED;
SELECT * FROM DEMO_DB.PUBLIC.CUSTOMERS_MASK;